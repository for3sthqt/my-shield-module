//#include <dt-bindings/zmk/mouse.h>

#include <behaviors/rgbled_widget.dtsi>
#include <behaviors/naginata.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAGINATA 1
#define LOWER 2
#define RAISE 3
#define ADJUST 4
#define MOUSE 5
#define MOD 6
#define SCROLL 2

// スクロール量の設定

#define ZMK_POINTING_DEFAULT_SCRL_VAL 200

/ {
    led_strip { chain-length = <5>; };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 2>;
            then-layer = <3>;
        };
    };
};

&sl { release-after-ms = <250>; }; // time needed for double click (for mkp_exit_AML)
/ {
    macros {
        // When in AML, move to before layer(naginata or base) when key (except mouse button) pressed

        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&tog 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_layer_0";
        };

        // When LCLK pressed, exit AML (after 250ms cause by sticky layer)

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 0>;

            label = "MKP_EXIT_AML";
        };

        // Support swapping into Scroll layer when AML is activated

        to_scroll_layer: to_scroll_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog 0>,
                <&macro_press>,
                <&mo 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 0>;

            //---------------------------------------------------------------------------------------
            // マウス操作中にもSCROLL並行可能
            // NAGINATAにいたとしてもSCROLL解除後はBASEへと戻ってしまう
            // <&to SCROLL>,
            // <&macro_pause_for_release>,
            // <&tog SCROLL>;
        };

        // NAGINATAにてModifierキー押下時にQwertyレイヤーを起動

        BL_mod: BL_mod {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&mo 0 &macro_param_1to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&mo 0>;
        };

        ng_on: ng_on {
            //          label = "ZM_ng_on";

            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LANGUAGE_1 &to 1>;

            // = <&macro_tap &kp LANGUAGE_1 &kp INTERNATIONAL_4 &to 1>; // default
        };

        ng_off: ng_off {
            //          label = "ZM_ng_off";

            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LANGUAGE_2 &to 0>;

            // = <&macro_tap &kp LANGUAGE_2 &kp INTERNATIONAL_5 &to 0>; // default
        };
    };
};

/ {
    behaviors {
        // スクロール用のbehaviorの設定

        scroll_down_up: behavior_sensor_rotate_mouse_wheel_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>; // スクロールのタップ時間
        };

        // Customed Hold-Tap for SandS
        // 他キーとの同時押しのみHold(Shift), 500m以上長押しすると、Tap(Space)のリピート

        SandS: SandS {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <500>; // tap-unless-interruptedのため意味は無いが、設定しないとエラーはく
            quick-tap-ms = <500>;
            bindings = <&kp>, <&kp>;

            display-name = "SandS";
        };

        ht_BASE: ht_BASE {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&BL_mod>, <&kp>;

            display-name = "ht-BL_mod";
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LALT LANG2>, <&mo 0>, <&mo 0>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&ht_BASE RCTL LANG1>, <&mo 0>, <&mo 0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_ng_on {
            timeout-ms = <300>;
            key-positions = <32 33>;
            bindings = <&ng_on>;
            layers = <0 1>; // default: <0>
        };

        combo_ng_off {
            timeout-ms = <300>;
            key-positions = <28 29>;
            bindings = <&ng_off>;
            layers = <0 1>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
            sensor-bindings = <&scroll_down_up>;
            bindings = <
&kp GRAVE       &kp N1  &kp N2        &kp N3     &kp N4  &kp N5                           &kp N6     &kp N7     &kp N8  &kp N9     &kp N0   &kp MINUS
&kp TAB         &kp Q   &kp W         &kp E      &kp R   &kp T                            &kp Y      &kp U      &kp I   &kp O      &kp P    &kp SQT
&kp LEFT_SHIFT  &kp A   &kp S         &kp D      &kp F   &kp G             &kp BACKSLASH  &kp LBKT   &kp H      &kp J   &kp K      &kp L    &kp SEMI   &kp MINUS
&kp ESCAPE      &kp Z   &kp X         &kp C      &kp V   &kp B             &kp SLASH      &kp RBKT   &kp N      &kp M   &kp COMMA  &kp DOT  &mkp LCLK  &kp EQUAL
&kp DELETE              &kp LEFT_ALT  &mkp MCLK  &mo 1   &kp LEFT_CONTROL  &kp BACKSPACE  &kp ENTER  &kp SPACE                              &mkp RCLK
            >;
        };

        naginata_layer {
            display-name = "Naginata";
            bindings = <
&kp KP_NUMLOCK  &kp F1          &kp F2          &kp F3           &kp F4  &kp F5                    &kp F6           &kp F7   &kp F8   &kp F9   &kp F10    &none
&kp TAB         &ng Q           &kp UP_ARROW    &ng E            &ng R   &ng T                     &kp F15          &kp F14  &kp F13  &kp F12  &kp F11    &none
&kp LEFT_SHIFT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &ng F   &ng G      &kp PAGE_UP    &kp INS          &ng H    &ng J    &ng K    &none      &mkp MCLK  &mkp RCLK
&kp ESCAPE      &ng Z           &ng X           &ng C            &ng V   &ng B      &kp PAGE_DOWN  &kp PRINTSCREEN  &ng N    &ng M    &none    &mkp LCLK  &ng SLASH  &trans
&kp LEFT_WIN                    &studio_unlock  &mkp MCLK        &none   &ng SPACE  &trans         &trans           &none                                 &td1
            >;

            sensor-bindings = <&scroll_down_up>;
        };

        // Extra layer can be added in ZMK STUDIO
    };
};
